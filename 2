use ratatui::{prelude::*, widgets::*};

use crate::app::Context;

use super::{page_layout::PageLayout, header::TabBar, footer::Footer};
use crate::pages::{dashboard::Dashboard, form::FormPage, records::RecordsPage};


pub struct ContentPage<'a> {
    context: &'a Context,
}

impl<'a> ContentPage<'a> {
    pub fn new(context: &'a Context) -> Self {
        Self {
            context
        }
    }
}

impl Widget for ContentPage<'_> {
    fn render(self, area: Rect, buf: &mut Buffer) {
        let area = PageLayout::new(area, Direction::Vertical, vec![1, 0, 1]);
        TabBar::new(self.context).render(area[0], buf);
        main_page(self.context, area[1], buf);
        Footer.render(area[2], buf);
    }
}

fn main_page(context: &Context, area: Rect, buf: &mut Buffer) {
    let pages: Vec<Box<dyn Widget>> = vec![
        Box::new(Dashboard::new(context)),
    ];        
}
